{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue","mtime":1572916934426},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvazE3MTExa2svVGVjaFRyYWluL3RlY2hUcmFpbl9taXNzaW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMzL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoc291cmNlLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8gZmlyZWJhc2Ug44Oi44K444Ol44O844OrCmltcG9ydCBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBNdXRhdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgQ09NUEFOWV9VUERBVEUgfSBmcm9tICIuLi9zdG9yZS9tdXRhdGlvbi10eXBlcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaG9tZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHt9LAogICAgICAvLyDjg6bjg7zjgrbjg7zmg4XloLEKICAgICAgY29tcGFueXM6IFtdLAogICAgICAvLyDlj5blvpfjgZfjgZ/jg6Hjg4Pjgrvjg7zjgrjjgpLlhaXjgozjgovphY3liJcKICAgICAgaW5wdXQ6ICIiIC8vIOWFpeWKm+OBl+OBn+ODoeODg+OCu+ODvOOCuAoKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBmaXJlYmFzZS5hdXRoKCkub25BdXRoU3RhdGVDaGFuZ2VkKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIF90aGlzLnVzZXIgPSB1c2VyID8gdXNlciA6IHt9OwogICAgICB2YXIgY29tcGFueURhdGEgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigiY29tcGFueSIpOwoKICAgICAgaWYgKHVzZXIpIHsKICAgICAgICBfdGhpcy5jb21wYW55cyA9IFtdOyAvLyBjb21wYW55IOOBq+WkieabtOOBjOOBguOBo+OBn+OBqOOBjeOBruODj+ODs+ODieODqeOCkueZu+mMsgoKICAgICAgICBjb21wYW55RGF0YS5saW1pdFRvTGFzdCgxMDApLm9uKCJjaGlsZF9hZGRlZCIsIF90aGlzLmNoaWxkQWRkZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIGNvbXBhbnkg44Gr5aSJ5pu044GM44GC44Gj44Gf44Go44GN44Gu44OP44Oz44OJ44Op44KS6Kej6ZmkCiAgICAgICAgY29tcGFueURhdGEubGltaXRUb0xhc3QoMTAwKS5vZmYoImNoaWxkX2FkZGVkIiwgX3RoaXMuY2hpbGRBZGRlZCk7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7CiAgICAvLyDjgrnjgq/jg63jg7zjg6vkvY3nva7jgpLkuIDnlarkuIvjgavnp7vli5UKICAgIC8vIOODreOCsOOCpOODs+WHpueQhgogICAgZG9Mb2dpbjogZnVuY3Rpb24gZG9Mb2dpbigpIHsKICAgICAgdmFyIHByb3ZpZGVyID0gbmV3IGZpcmViYXNlLmF1dGguR29vZ2xlQXV0aFByb3ZpZGVyKCk7CiAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoUG9wdXAocHJvdmlkZXIpOwogICAgfQogIH0sIG1hcE11dGF0aW9ucyh7CiAgICBDT01QQU5ZX1VQREFURTogQ09NUEFOWV9VUERBVEUKICB9KSwgewogICAgLy8g44Ot44Kw44Ki44Km44OI5Yem55CGCiAgICBkb0xvZ291dDogZnVuY3Rpb24gZG9Mb2dvdXQoKSB7CiAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduT3V0KCk7CiAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgfSwKICAgIHNjcm9sbEJvdHRvbTogZnVuY3Rpb24gc2Nyb2xsQm90dG9tKCkgewogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+X44GR5Y+W44Gj44Gf44Oh44OD44K744O844K444KSY29tcGFueXPjgavov73liqAKICAgIC8vIOODh+ODvOOCv+ODmeODvOOCueOBq+aWsOOBl+OBhOimgee0oOOBjOi/veWKoOOBleOCjOOCi+OBqOmaj+aZguWRvOOBs+WHuuOBleOCjOOCiwogICAgY2hpbGRBZGRlZDogZnVuY3Rpb24gY2hpbGRBZGRlZChzbmFwKSB7CiAgICAgIHZhciBjb21wYW55ID0gc25hcC52YWwoKTsKICAgICAgdGhpcy5jb21wYW55cy5wdXNoKHsKICAgICAgICBrZXk6IHNuYXAua2V5LAogICAgICAgIGRheTogY29tcGFueS5kYXksCiAgICAgICAgZmVlbDogY29tcGFueS5mZWVsLAogICAgICAgIHBsYWNlOiBjb21wYW55LnBsYWNlLAogICAgICAgIG5hbWU6IGNvbXBhbnkubmFtZQogICAgICB9KTsKICAgICAgdGhpcy5zY3JvbGxCb3R0b20oKTsKICAgIH0sCiAgICBkZWxldGVDb21wYW55OiBmdW5jdGlvbiBkZWxldGVDb21wYW55KGtleSkgewogICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigiY29tcGFueS8iICsga2V5KS5zZXQoe30pOyAvL+S8muekvuaDheWgseOBruWJiumZpAoKICAgICAgZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoImNvbW1lbnQvIiArIGtleSkuc2V0KHt9KTsgLy/jgYLjgovkvJrnpL7jgavlr77jgZnjgovjgrPjg6Hjg7Pjg4jjga7liYrpmaQKCiAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgfSwKICAgIGNvbXBhbnlTZW5kOiBmdW5jdGlvbiBjb21wYW55U2VuZChzdHIpIHsKICAgICAgdGhpcy5DT01QQU5ZX1VQREFURShzdHIpOyAvL+S8muekvuaDheWgseOCkuips+e0sOeUu+mdouOBq+mAgeOCiwogICAgfQogIH0pCn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA,OAAA,QAAA,MAAA,UAAA;AACA,SAAA,QAAA,EAAA,YAAA,QAAA,MAAA;AACA,SAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,KAAA,EAAA,EAHA,CAGA;;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AACA,IAAA,QAAA,CAAA,IAAA,GAAA,kBAAA,CAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,SAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,EAAA,CADA,CAEA;;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,GAAA,EAAA,EAAA,CAAA,aAAA,EAAA,KAAA,CAAA,UAAA;AACA,OAJA,MAIA;AACA;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,GAAA,EAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,UAAA;AACA;AACA,KAXA;AAYA,GAtBA;AAuBA,EAAA,OAAA;AACA;AACA;AACA,IAAA,OAHA,qBAGA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,eAAA,CAAA,QAAA;AACA;AANA,KAOA,YAAA,CAAA;AACA,IAAA,cAAA,EAAA;AADA,GAAA,CAPA;AAUA;AACA,IAAA,QAXA,sBAWA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,OAAA;AACA,MAAA,QAAA,CAAA,MAAA;AACA,KAdA;AAeA,IAAA,YAfA,0BAeA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,YAAA;AACA,OAFA;AAGA,KAnBA;AAoBA;AACA;AACA,IAAA,UAtBA,sBAsBA,IAtBA,EAsBA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,GAAA,EAAA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA;AACA,QAAA,GAAA,EAAA,IAAA,CAAA,GADA;AAEA,QAAA,GAAA,EAAA,OAAA,CAAA,GAFA;AAGA,QAAA,IAAA,EAAA,OAAA,CAAA,IAHA;AAIA,QAAA,KAAA,EAAA,OAAA,CAAA,KAJA;AAKA,QAAA,IAAA,EAAA,OAAA,CAAA;AALA,OAAA;AAOA,WAAA,YAAA;AACA,KAhCA;AAiCA,IAAA,aAjCA,yBAiCA,GAjCA,EAiCA;AACA,MAAA,QAAA,CACA,QADA,GAEA,GAFA,CAEA,aAAA,GAFA,EAGA,GAHA,CAGA,EAHA,EADA,CAIA;;AACA,MAAA,QAAA,CACA,QADA,GAEA,GAFA,CAEA,aAAA,GAFA,EAGA,GAHA,CAGA,EAHA,EALA,CAQA;;AACA,MAAA,QAAA,CAAA,MAAA;AACA,KA3CA;AA4CA,IAAA,WA5CA,uBA4CA,GA5CA,EA4CA;AACA,WAAA,cAAA,CAAA,GAAA,EADA,CACA;AACA;AA9CA;AAvBA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"app\">\n      <header class=\"header\">\n        <h1>インターン情報サイト</h1>\n        <!-- ログイン時にはフォームとログアウトボタンを表示 -->\n        <div v-if=\"user.uid\" key=\"login\">\n          [{{ user.displayName }}]\n          <button type=\"button\" @click=\"doLogout\">ログアウト</button>\n        </div>\n        <!-- 未ログイン時にはログインボタンを表示 -->\n        <div v-else key=\"logout\">\n          <button type=\"button\" @click=\"doLogin\">ログイン</button>\n        </div>\n      </header>\n\n      <!--Firebase から取得したリストを描画（トランジション付き）-->\n      <transition-group name=\"company\" tag=\"div\" class=\"list content\">\n        <section\n          v-for=\"{ key, name, day, place, feel } in companys\"\n          :key=\"key\"\n          class=\"item\"\n        >\n          <router-link\n            to=\"./detail\"\n            @click.native=\"companySend({ key, name, day, place, feel })\"\n            >{{ name }}</router-link\n          >\n          <button type=\"button\" @click=\"deleteCompany(key)\">削除</button>\n        </section>\n      </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { COMPANY_UPDATE } from \"../store/mutation-types\";\nexport default {\n  name: \"home\",\n  data() {\n    return {\n      user: {}, // ユーザー情報\n      companys: [], // 取得したメッセージを入れる配列\n      input: \"\" // 入力したメッセージ\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.user = user ? user : {};\n      const companyData = firebase.database().ref(\"company\");\n      if (user) {\n        this.companys = [];\n        // company に変更があったときのハンドラを登録\n        companyData.limitToLast(100).on(\"child_added\", this.childAdded);\n      } else {\n        // company に変更があったときのハンドラを解除\n        companyData.limitToLast(100).off(\"child_added\", this.childAdded);\n      }\n    });\n  },\n  methods: {\n    // スクロール位置を一番下に移動\n    // ログイン処理\n    doLogin() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n    },\n    ...mapMutations({\n      COMPANY_UPDATE\n    }),\n    // ログアウト処理\n    doLogout() {\n      firebase.auth().signOut();\n      location.reload();\n    },\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをcompanysに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const company = snap.val();\n      this.companys.push({\n        key: snap.key,\n        day: company.day,\n        feel: company.feel,\n        place: company.place,\n        name: company.name\n      });\n      this.scrollBottom();\n    },\n    deleteCompany(key) {\n      firebase\n        .database()\n        .ref(\"company/\" + key)\n        .set({}); //会社情報の削除\n      firebase\n        .database()\n        .ref(\"comment/\" + key)\n        .set({}); //ある会社に対するコメントの削除\n      location.reload();\n    },\n    companySend(str) {\n      this.COMPANY_UPDATE(str); //会社情報を詳細画面に送る\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}