{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vuetify-loader/lib/loader.js!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Find.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Find.vue","mtime":1575345873733},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Find.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"finder\">\n    <template v-if=\"this.loading\">\n      <vue-loading\n        type=\"balls\"\n        color=\"#333\"\n        :size=\"{ width: '50px', height: '50px' }\"\n      ></vue-loading>\n    </template>\n    <template v-else>\n      <v-container class=\"mx-auto text-left p-3\">\n        <h3 class=\"p-3\">検索結果</h3>\n        <a>{{ keyword }}の検索結果を表示しています</a>\n        <template v-if=\"filteredCompanys == '' && filteredSubCompanys == ''\">\n          <a>お探しの企業は見つかりませんでした</a>\n        </template>\n        <!--Firebase から取得したリストを描画（トランジション付き）-->\n        <v-list two-line subheader shaped>\n          <v-subheader>COMPANYS</v-subheader>\n          <v-list-item-group color=\"primary\">\n            <v-list-item\n              v-for=\"{\n                name,\n                key,\n                prefecture,\n                address,\n                url,\n                phonenumber\n              } in filteredCompanys\"\n            >\n              <v-list-item-content\n                @click=\"\n                  companySend({\n                    key,\n                    name,\n                    prefecture,\n                    address,\n                    url,\n                    phonenumber,\n                    select: 'main-company'\n                  })\n                \"\n              >\n                <v-list-item-title\n                  style=\"text-align: left;\"\n                  class=\"ml-4\"\n                  v-text=\"prefecture\"\n                ></v-list-item-title>\n                <v-list-item-subtitle\n                  style=\"text-align: left;\"\n                  class=\"ml-4\"\n                  v-text=\"name\"\n                ></v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n        </v-list>\n        <!--Firebase から取得したリストを描画（支社）-->\n        <v-list two-line subheader shaped>\n          <v-subheader>SUBCOMPANYS</v-subheader>\n          <v-list-item-group color=\"primary\">\n            <v-list-item\n              v-for=\"{\n                name,\n                key,\n                prefecture,\n                address,\n                url,\n                phonenumber\n              } in filteredSubCompanys\"\n            >\n              <v-list-item-content\n                @click=\"\n                  companySend({\n                    key,\n                    name,\n                    prefecture,\n                    address,\n                    url,\n                    phonenumber,\n                    select: 'sub-company'\n                  })\n                \"\n              >\n                <v-list-item-title\n                  style=\"text-align: left;\"\n                  class=\"ml-4\"\n                  v-text=\"prefecture\"\n                ></v-list-item-title>\n                <v-list-item-subtitle\n                  style=\"text-align: left;\"\n                  class=\"ml-4\"\n                  v-text=\"name\"\n                ></v-list-item-subtitle>\n              </v-list-item-content>\n            </v-list-item>\n          </v-list-item-group>\n        </v-list>\n      </v-container>\n    </template>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { COMPANY_UPDATE } from \"../store/mutation-types\";\nimport { VueLoading } from \"vue-loading-template\";\n\nexport default {\n  name: \"finder\",\n  components: {\n    VueLoading\n  },\n  data() {\n    return {\n      keyword: this.$store.state.findcompany,\n      picked: \"main\",\n      user: {}, // ユーザー情報\n      companys: [], // 取得した本社を入れる配列\n      subCompanys: [],\n      loading: true\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.user = user ? user : {};\n      const companyData = firebase.database().ref(\"main-company\");\n      const subCompanyData = firebase.database().ref(\"sub-company\");\n      if (user) {\n        this.companys = [];\n        this.subCompanys = [];\n        // company に変更があったときのハンドラを登録\n        companyData.limitToLast(100).on(\"child_added\", this.childAdded);\n        subCompanyData.limitToLast(100).on(\"child_added\", this.subChildAdded);\n      } else {\n        // company に変更があったときのハンドラを解除\n        companyData.limitToLast(100).off(\"child_added\", this.childAdded);\n      }\n    });\n  },\n  computed: {\n    selectAll: {\n      get: function() {\n        //authorsのチェックボックスのすべてにチェックが入ったかを判定\n        if (this.checkNames.length == this.prefectures.length) {\n          return true; //authorsにすべてチェックを入れるとselectAllはtrueとなりチェックが入る\n        } else {\n          return false;\n        }\n      },\n      set: function(value) {\n        //全選択のチェックボックスを操作した場合\n        //空の配列を用意\n        let checkArray = [];\n\n        //チェックが入った場合（trueでの判定）\n        if (value) {\n          this.prefectures.forEach(function(prefecture) {\n            checkArray.push(prefecture);\n          });\n        }\n        this.checkNames = checkArray;\n      }\n    },\n    filteredCompanys: function() {\n      var filterCompanys = [];\n\n      for (var i in this.companys) {\n        var company = this.companys[i];\n        if (company.name.indexOf(this.keyword) !== -1) {\n          filterCompanys.push(company);\n        }\n      }\n      return filterCompanys;\n    },\n    filteredSubCompanys: function() {\n      var filterSubCompanys = [];\n\n      for (var i in this.subCompanys) {\n        var subCompany = this.subCompanys[i];\n        if (subCompany.name.indexOf(this.keyword) !== -1) {\n          filterSubCompanys.push(subCompany);\n        }\n      }\n      return filterSubCompanys;\n    }\n  },\n  mounted() {\n    setTimeout(() => {\n      this.loading = false;\n    }, 1000);\n  },\n  methods: {\n    // スクロール位置を一番下に移動\n    ...mapMutations({\n      COMPANY_UPDATE\n    }),\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをcompanysに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const company = snap.val();\n      this.companys.push({\n        key: snap.key,\n        name: company.name,\n        prefecture: company.prefecture,\n        address: company.address,\n        url: company.url,\n        phonenumber: company.phonenumber\n      });\n      this.scrollBottom();\n    },\n    subChildAdded(snap) {\n      const subCompany = snap.val();\n      this.subCompanys.push({\n        key: snap.key,\n        name: subCompany.name,\n        prefecture: subCompany.prefecture,\n        address: subCompany.address,\n        url: subCompany.url,\n        phonenumber: subCompany.phonenumber,\n        main_com_id: subCompany.main_com_id\n      });\n      this.scrollBottom();\n    },\n    sendDetail() {\n      document.location.href = \"./detail\";\n    },\n    companySend(str) {\n      this.COMPANY_UPDATE(str); //会社情報を詳細画面に送る\n      this.sendDetail();\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}