{"remainingRequest":"/Users/k17111kk/TechTrain/google-auth/node_modules/babel-loader/lib/index.js!/Users/k17111kk/TechTrain/google-auth/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k17111kk/TechTrain/google-auth/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/google-auth/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/google-auth/src/App.vue","mtime":1572266215118},{"path":"/Users/k17111kk/TechTrain/google-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/google-auth/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/google-auth/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/google-auth/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vIGZpcmViYXNlIOODouOCuOODpeODvOODqwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOyAvLyDmlLnooYzjgpIgPGJyPiDjgr/jgrDjgavlpInmj5vjgZnjgovjg6Ljgrjjg6Xjg7zjg6sKCmltcG9ydCBObDJiciBmcm9tICJ2dWUtbmwyYnIiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTmwyYnI6IE5sMmJyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcjoge30sCiAgICAgIC8vIOODpuODvOOCtuODvOaDheWgsQogICAgICBjaGF0OiBbXSwKICAgICAgLy8g5Y+W5b6X44GX44Gf44Oh44OD44K744O844K444KS5YWl44KM44KL6YWN5YiXCiAgICAgIGlucHV0OiAiIiAvLyDlhaXlipvjgZfjgZ/jg6Hjg4Pjgrvjg7zjgrgKCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgZmlyZWJhc2UuYXV0aCgpLm9uQXV0aFN0YXRlQ2hhbmdlZChmdW5jdGlvbiAodXNlcikgewogICAgICBfdGhpcy51c2VyID0gdXNlciA/IHVzZXIgOiB7fTsKICAgICAgdmFyIHJlZl9tZXNzYWdlID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoIm1lc3NhZ2UiKTsKCiAgICAgIGlmICh1c2VyKSB7CiAgICAgICAgX3RoaXMuY2hhdCA9IFtdOyAvLyBtZXNzYWdlIOOBq+WkieabtOOBjOOBguOBo+OBn+OBqOOBjeOBruODj+ODs+ODieODqeOCkueZu+mMsgoKICAgICAgICByZWZfbWVzc2FnZS5saW1pdFRvTGFzdCgxMCkub24oImNoaWxkX2FkZGVkIiwgX3RoaXMuY2hpbGRBZGRlZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gbWVzc2FnZSDjgavlpInmm7TjgYzjgYLjgaPjgZ/jgajjgY3jga7jg4/jg7Pjg4njg6njgpLop6PpmaQKICAgICAgICByZWZfbWVzc2FnZS5saW1pdFRvTGFzdCgxMCkub2ZmKCJjaGlsZF9hZGRlZCIsIF90aGlzLmNoaWxkQWRkZWQpOwogICAgICB9CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOODreOCsOOCpOODs+WHpueQhgogICAgZG9Mb2dpbjogZnVuY3Rpb24gZG9Mb2dpbigpIHsKICAgICAgdmFyIHByb3ZpZGVyID0gbmV3IGZpcmViYXNlLmF1dGguR29vZ2xlQXV0aFByb3ZpZGVyKCk7CiAgICAgIGZpcmViYXNlLmF1dGgoKS5zaWduSW5XaXRoUG9wdXAocHJvdmlkZXIpOwogICAgfSwKICAgIC8vIOODreOCsOOCouOCpuODiOWHpueQhgogICAgZG9Mb2dvdXQ6IGZ1bmN0aW9uIGRvTG9nb3V0KCkgewogICAgICBmaXJlYmFzZS5hdXRoKCkuc2lnbk91dCgpOwogICAgfSwKICAgIC8vIOOCueOCr+ODreODvOODq+S9jee9ruOCkuS4gOeVquS4i+OBq+enu+WLlQogICAgc2Nyb2xsQm90dG9tOiBmdW5jdGlvbiBzY3JvbGxCb3R0b20oKSB7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDlj5fjgZHlj5bjgaPjgZ/jg6Hjg4Pjgrvjg7zjgrjjgpJjaGF044Gr6L+95YqgCiAgICAvLyDjg4fjg7zjgr/jg5njg7zjgrnjgavmlrDjgZfjgYTopoHntKDjgYzov73liqDjgZXjgozjgovjgajpmo/mmYLlkbzjgbPlh7rjgZXjgozjgosKICAgIGNoaWxkQWRkZWQ6IGZ1bmN0aW9uIGNoaWxkQWRkZWQoc25hcCkgewogICAgICB2YXIgbWVzc2FnZSA9IHNuYXAudmFsKCk7CiAgICAgIHRoaXMuY2hhdC5wdXNoKHsKICAgICAgICBrZXk6IHNuYXAua2V5LAogICAgICAgIG5hbWU6IG1lc3NhZ2UubmFtZSwKICAgICAgICBpbWFnZTogbWVzc2FnZS5pbWFnZSwKICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLm1lc3NhZ2UKICAgICAgfSk7CiAgICAgIHRoaXMuc2Nyb2xsQm90dG9tKCk7CiAgICB9LAogICAgZG9TZW5kOiBmdW5jdGlvbiBkb1NlbmQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudXNlci51aWQgJiYgdGhpcy5pbnB1dC5sZW5ndGgpIHsKICAgICAgICAvLyBmaXJlYmFzZSDjgavjg6Hjg4Pjgrvjg7zjgrjjgpLov73liqAKICAgICAgICBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigibWVzc2FnZSIpLnB1c2goewogICAgICAgICAgbWVzc2FnZTogdGhpcy5pbnB1dCwKICAgICAgICAgIG5hbWU6IHRoaXMudXNlci5kaXNwbGF5TmFtZSwKICAgICAgICAgIGltYWdlOiB0aGlzLnVzZXIucGhvdG9VUkwKICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczIuaW5wdXQgPSAiIjsgLy8g44OV44Kp44O844Og44KS56m644Gr44GZ44KLCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA,OAAA,QAAA,MAAA,UAAA,C,CACA;;AACA,OAAA,KAAA,MAAA,WAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AACA;AACA,MAAA,IAAA,EAAA,EAFA;AAEA;AACA,MAAA,KAAA,EAAA,EAHA,CAGA;;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AAAA;;AACA,IAAA,QAAA,CAAA,IAAA,GAAA,kBAAA,CAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,SAAA,CAAA;;AACA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,EAAA,CADA,CAEA;;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,CAAA,aAAA,EAAA,KAAA,CAAA,UAAA;AACA,OAJA,MAIA;AACA;AACA,QAAA,WAAA,CAAA,WAAA,CAAA,EAAA,EAAA,GAAA,CAAA,aAAA,EAAA,KAAA,CAAA,UAAA;AACA;AACA,KAXA;AAYA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,OAFA,qBAEA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,eAAA,CAAA,QAAA;AACA,KALA;AAMA;AACA,IAAA,QAPA,sBAOA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,OAAA;AACA,KATA;AAUA;AACA,IAAA,YAXA,0BAWA;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,YAAA;AACA,OAFA;AAGA,KAfA;AAgBA;AACA;AACA,IAAA,UAlBA,sBAkBA,IAlBA,EAkBA;AACA,UAAA,OAAA,GAAA,IAAA,CAAA,GAAA,EAAA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AACA,QAAA,GAAA,EAAA,IAAA,CAAA,GADA;AAEA,QAAA,IAAA,EAAA,OAAA,CAAA,IAFA;AAGA,QAAA,KAAA,EAAA,OAAA,CAAA,KAHA;AAIA,QAAA,OAAA,EAAA,OAAA,CAAA;AAJA,OAAA;AAMA,WAAA,YAAA;AACA,KA3BA;AA4BA,IAAA,MA5BA,oBA4BA;AAAA;;AACA,UAAA,KAAA,IAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,MAAA,EAAA;AACA;AACA,QAAA,QAAA,CACA,QADA,GAEA,GAFA,CAEA,SAFA,EAGA,IAHA,CAIA;AACA,UAAA,OAAA,EAAA,KAAA,KADA;AAEA,UAAA,IAAA,EAAA,KAAA,IAAA,CAAA,WAFA;AAGA,UAAA,KAAA,EAAA,KAAA,IAAA,CAAA;AAHA,SAJA,EASA,YAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,EAAA,CADA,CACA;AACA,SAXA;AAaA;AACA;AA7CA;AAvBA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"header\">\n      <h1>Chat</h1>\n      <!-- ログイン時にはフォームとログアウトボタンを表示 -->\n      <div v-if=\"user.uid\" key=\"login\">\n        [{{ user.displayName }}]\n        <button type=\"button\" @click=\"doLogout\">ログアウト</button>\n      </div>\n      <!-- 未ログイン時にはログインボタンを表示 -->\n      <div v-else key=\"logout\">\n        <button type=\"button\" @click=\"doLogin\">ログイン</button>\n      </div>\n    </header>\n\n    <!--Firebase から取得したリストを描画（トランジション付き）-->\n    <transition-group name=\"chat\" tag=\"div\" class=\"list content\">\n      <section\n        v-for=\"{ key, name, image, message } in chat\"\n        :key=\"key\"\n        class=\"item\"\n      >\n        <div class=\"item-image\">\n          <img :src=\"image\" width=\"40\" height=\"40\" />\n        </div>\n        <div class=\"item-detail\">\n          <div class=\"item-name\">{{ name }}</div>\n          <div class=\"item-message\">\n            <nl2br tag=\"div\" :text=\"message\" />\n          </div>\n        </div>\n      </section>\n    </transition-group>\n\n    <!-- 入力フォーム -->\n    <form action=\"\" @submit.prevent=\"doSend\" class=\"form\">\n      <textarea\n        v-model=\"input\"\n        :disabled=\"!user.uid\"\n        @keydown.enter.exact.prevent=\"doSend\"\n      ></textarea>\n      <button type=\"submit\" :disabled=\"!user.uid\" class=\"send-button\">\n        Send\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\n// 改行を <br> タグに変換するモジュール\nimport Nl2br from \"vue-nl2br\";\nexport default {\n  components: { Nl2br },\n  data() {\n    return {\n      user: {}, // ユーザー情報\n      chat: [], // 取得したメッセージを入れる配列\n      input: \"\" // 入力したメッセージ\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.user = user ? user : {};\n      const ref_message = firebase.database().ref(\"message\");\n      if (user) {\n        this.chat = [];\n        // message に変更があったときのハンドラを登録\n        ref_message.limitToLast(10).on(\"child_added\", this.childAdded);\n      } else {\n        // message に変更があったときのハンドラを解除\n        ref_message.limitToLast(10).off(\"child_added\", this.childAdded);\n      }\n    });\n  },\n  methods: {\n    // ログイン処理\n    doLogin() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n    },\n    // ログアウト処理\n    doLogout() {\n      firebase.auth().signOut();\n    },\n    // スクロール位置を一番下に移動\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをchatに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const message = snap.val();\n      this.chat.push({\n        key: snap.key,\n        name: message.name,\n        image: message.image,\n        message: message.message\n      });\n      this.scrollBottom();\n    },\n    doSend() {\n      if (this.user.uid && this.input.length) {\n        // firebase にメッセージを追加\n        firebase\n          .database()\n          .ref(\"message\")\n          .push(\n            {\n              message: this.input,\n              name: this.user.displayName,\n              image: this.user.photoURL\n            },\n            () => {\n              this.input = \"\"; // フォームを空にする\n            }\n          );\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src"}]}