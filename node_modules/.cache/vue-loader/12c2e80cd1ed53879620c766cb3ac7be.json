{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Delete.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Delete.vue","mtime":1573720053816},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGZpcmViYXNlIOODouOCuOODpeODvOODqwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IENPTVBBTllfVVBEQVRFIH0gZnJvbSAiLi4vc3RvcmUvbXV0YXRpb24tdHlwZXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImRlbGV0ZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXI6IHt9LCAvLyDjg6bjg7zjgrbjg7zmg4XloLEKICAgICAgY29tcGFueXM6IFtdLCAvLyDlj5blvpfjgZfjgZ/mnKznpL7jgpLlhaXjgozjgovphY3liJcKICAgICAgc3ViQ29tcGFueXM6IFtdLAogICAgICBpbnB1dDogIiIgLy8g5YWl5Yqb44GX44Gf44Oh44OD44K744O844K4CiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGZpcmViYXNlLmF1dGgoKS5vbkF1dGhTdGF0ZUNoYW5nZWQodXNlciA9PiB7CiAgICAgIHRoaXMudXNlciA9IHVzZXIgPyB1c2VyIDoge307CiAgICAgIGNvbnN0IGNvbXBhbnlEYXRhID0gZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoIm1haW4tY29tcGFueSIpOwogICAgICBjb25zdCBzdWJDb21wYW55RGF0YSA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCJzdWItY29tcGFueSIpOwogICAgICBpZiAodXNlcikgewogICAgICAgIHRoaXMuY29tcGFueXMgPSBbXTsKICAgICAgICB0aGlzLnN1YkNvbXBhbnlzID0gW107CiAgICAgICAgLy8gY29tcGFueSDjgavlpInmm7TjgYzjgYLjgaPjgZ/jgajjgY3jga7jg4/jg7Pjg4njg6njgpLnmbvpjLIKICAgICAgICBjb21wYW55RGF0YS5saW1pdFRvTGFzdCgxMDApLm9uKCJjaGlsZF9hZGRlZCIsIHRoaXMuY2hpbGRBZGRlZCk7CiAgICAgICAgc3ViQ29tcGFueURhdGEubGltaXRUb0xhc3QoMTAwKS5vbigiY2hpbGRfYWRkZWQiLCB0aGlzLnN1YkNoaWxkQWRkZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIGNvbXBhbnkg44Gr5aSJ5pu044GM44GC44Gj44Gf44Go44GN44Gu44OP44Oz44OJ44Op44KS6Kej6ZmkCiAgICAgICAgY29tcGFueURhdGEubGltaXRUb0xhc3QoMTAwKS5vZmYoImNoaWxkX2FkZGVkIiwgdGhpcy5jaGlsZEFkZGVkKTsKICAgICAgICBzdWJDb21wYW55RGF0YS5saW1pdFRvTGFzdCgxMDApLm9mZigiY2hpbGRfYWRkZWQiLCB0aGlzLnN1YkNoaWxkQWRkZWQpOwogICAgICB9CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOOCueOCr+ODreODvOODq+S9jee9ruOCkuS4gOeVquS4i+OBq+enu+WLlQogICAgLi4ubWFwTXV0YXRpb25zKHsKICAgICAgQ09NUEFOWV9VUERBVEUKICAgIH0pLAogICAgc2Nyb2xsQm90dG9tKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+X44GR5Y+W44Gj44Gf44Oh44OD44K744O844K444KSY29tcGFueXPjgavov73liqAKICAgIC8vIOODh+ODvOOCv+ODmeODvOOCueOBq+aWsOOBl+OBhOimgee0oOOBjOi/veWKoOOBleOCjOOCi+OBqOmaj+aZguWRvOOBs+WHuuOBleOCjOOCiwogICAgY2hpbGRBZGRlZChzbmFwKSB7CiAgICAgIGNvbnN0IGNvbXBhbnkgPSBzbmFwLnZhbCgpOwogICAgICB0aGlzLmNvbXBhbnlzLnB1c2goewogICAgICAgIGtleTogc25hcC5rZXksCiAgICAgICAgbmFtZTogY29tcGFueS5uYW1lLAogICAgICAgIHByZWZlY3R1cmU6IGNvbXBhbnkucHJlZmVjdHVyZSwKICAgICAgICBhZGRyZXNzOiBjb21wYW55LmFkZHJlc3MsCiAgICAgICAgdXJsOiBjb21wYW55LnVybCwKICAgICAgICBwaG9uZW51bWJlcjogY29tcGFueS5waG9uZW51bWJlciwKICAgICAgICB1c2VyX2lkOiBjb21wYW55LnVzZXJfaWQKICAgICAgfSk7CiAgICAgIHRoaXMuc2Nyb2xsQm90dG9tKCk7CiAgICB9LAogICAgc3ViQ2hpbGRBZGRlZChzbmFwKSB7CiAgICAgIGNvbnN0IHN1YkNvbXBhbnkgPSBzbmFwLnZhbCgpOwogICAgICB0aGlzLnN1YkNvbXBhbnlzLnB1c2goewogICAgICAgIGtleTogc25hcC5rZXksCiAgICAgICAgbmFtZTogc3ViQ29tcGFueS5uYW1lLAogICAgICAgIHByZWZlY3R1cmU6IHN1YkNvbXBhbnkucHJlZmVjdHVyZSwKICAgICAgICBhZGRyZXNzOiBzdWJDb21wYW55LmFkZHJlc3MsCiAgICAgICAgdXJsOiBzdWJDb21wYW55LnVybCwKICAgICAgICBwaG9uZW51bWJlcjogc3ViQ29tcGFueS5waG9uZW51bWJlciwKICAgICAgICBtYWluX2NvbV9pZDogc3ViQ29tcGFueS5tYWluX2NvbV9pZCwKICAgICAgICB1c2VyX2lkOiBzdWJDb21wYW55LnVzZXJfaWQKICAgICAgfSk7CiAgICAgIHRoaXMuc2Nyb2xsQm90dG9tKCk7CiAgICB9LAogICAgZGVsZXRlTWFpbkNvbXBhbnkoa2V5KSB7CiAgICAgIHZhciByZXMgPSBjb25maXJtKCLmnKzlvZPjgavliYrpmaTjgZfjgb7jgZnjgYs/Iik7CiAgICAgIGlmIChyZXMgPT0gdHJ1ZSkgewogICAgICAgIGZpcmViYXNlCiAgICAgICAgICAuZGF0YWJhc2UoKQogICAgICAgICAgLnJlZigibWFpbi1jb21wYW55LyIgKyBrZXkpCiAgICAgICAgICAuc2V0KHt9KTsgLy/kvJrnpL7mg4XloLHjga7liYrpmaQKICAgICAgICBmaXJlYmFzZQogICAgICAgICAgLmRhdGFiYXNlKCkKICAgICAgICAgIC5yZWYoImNvbW1lbnQvIiArIGtleSkKICAgICAgICAgIC5zZXQoe30pOyAvL+OBguOCi+S8muekvuOBq+WvvuOBmeOCi+OCs+ODoeODs+ODiOOBruWJiumZpAogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICB9CiAgICB9LAogICAgZGVsZXRlU3ViQ29tcGFueShrZXkpIHsKICAgICAgdmFyIHJlcyA9IGNvbmZpcm0oIuacrOW9k+OBq+WJiumZpOOBl+OBvuOBmeOBiz8iKTsKICAgICAgaWYgKHJlcyA9PSB0cnVlKSB7CiAgICAgICAgZmlyZWJhc2UKICAgICAgICAgIC5kYXRhYmFzZSgpCiAgICAgICAgICAucmVmKCJzdWItY29tcGFueS8iICsga2V5KQogICAgICAgICAgLnNldCh7fSk7IC8v5Lya56S+5oOF5aCx44Gu5YmK6ZmkCiAgICAgICAgZmlyZWJhc2UKICAgICAgICAgIC5kYXRhYmFzZSgpCiAgICAgICAgICAucmVmKCJjb21tZW50LyIgKyBrZXkpCiAgICAgICAgICAuc2V0KHt9KTsgLy/jgYLjgovkvJrnpL7jgavlr77jgZnjgovjgrPjg6Hjg7Pjg4jjga7liYrpmaQKICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgfQogICAgfSwKICAgIHNlbmREZXRhaWwoKSB7CiAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSAiLi9kZXRhaWwiOwogICAgfSwKICAgIGNvbXBhbnlTZW5kKHN0cikgewogICAgICB0aGlzLkNPTVBBTllfVVBEQVRFKHN0cik7IC8v5Lya56S+5oOF5aCx44KS6Kmz57Sw55S76Z2i44Gr6YCB44KLCiAgICAgIHRoaXMuc2VuZERldGFpbCgpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Delete.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Delete.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"delete\">\n    <div id=\"app\">\n      <header class=\"header\">\n        <h1>インターン情報サイト</h1>\n      </header>\n      <!--Firebase から取得したリストを描画（トランジション付き）-->\n      <h2>本社</h2>\n      <transition-group name=\"company\" tag=\"div\" class=\"list content\">\n        <section\n          v-for=\"{\n            key,\n            name,\n            prefecture,\n            address,\n            url,\n            phonenumber,\n            user_id\n          } in companys\"\n          :key=\"key\"\n          class=\"item\"\n        >\n          <template v-if=\"user_id == user.uid\">\n            <a>{{ name }}</a>\n            <button type=\"button\" @click=\"deleteMainCompany(key)\">削除</button>\n          </template>\n        </section>\n      </transition-group>\n      <!--Firebase から取得したリストを描画（支社）-->\n      <h2>支社</h2>\n      <transition-group name=\"subCompany\" tag=\"div\" class=\"list content\">\n        <section\n          v-for=\"{\n            key,\n            name,\n            prefecture,\n            address,\n            url,\n            phonenumber,\n            user_id\n          } in subCompanys\"\n          :key=\"key\"\n          class=\"item\"\n        >\n          <template v-if=\"user_id == user.uid\">\n            <a>{{ name }}</a>\n            <button type=\"button\" @click=\"deleteSubCompany(key)\">削除</button>\n          </template>\n        </section>\n      </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { COMPANY_UPDATE } from \"../store/mutation-types\";\nexport default {\n  name: \"delete\",\n  data() {\n    return {\n      user: {}, // ユーザー情報\n      companys: [], // 取得した本社を入れる配列\n      subCompanys: [],\n      input: \"\" // 入力したメッセージ\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.user = user ? user : {};\n      const companyData = firebase.database().ref(\"main-company\");\n      const subCompanyData = firebase.database().ref(\"sub-company\");\n      if (user) {\n        this.companys = [];\n        this.subCompanys = [];\n        // company に変更があったときのハンドラを登録\n        companyData.limitToLast(100).on(\"child_added\", this.childAdded);\n        subCompanyData.limitToLast(100).on(\"child_added\", this.subChildAdded);\n      } else {\n        // company に変更があったときのハンドラを解除\n        companyData.limitToLast(100).off(\"child_added\", this.childAdded);\n        subCompanyData.limitToLast(100).off(\"child_added\", this.subChildAdded);\n      }\n    });\n  },\n  methods: {\n    // スクロール位置を一番下に移動\n    ...mapMutations({\n      COMPANY_UPDATE\n    }),\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをcompanysに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const company = snap.val();\n      this.companys.push({\n        key: snap.key,\n        name: company.name,\n        prefecture: company.prefecture,\n        address: company.address,\n        url: company.url,\n        phonenumber: company.phonenumber,\n        user_id: company.user_id\n      });\n      this.scrollBottom();\n    },\n    subChildAdded(snap) {\n      const subCompany = snap.val();\n      this.subCompanys.push({\n        key: snap.key,\n        name: subCompany.name,\n        prefecture: subCompany.prefecture,\n        address: subCompany.address,\n        url: subCompany.url,\n        phonenumber: subCompany.phonenumber,\n        main_com_id: subCompany.main_com_id,\n        user_id: subCompany.user_id\n      });\n      this.scrollBottom();\n    },\n    deleteMainCompany(key) {\n      var res = confirm(\"本当に削除しますか?\");\n      if (res == true) {\n        firebase\n          .database()\n          .ref(\"main-company/\" + key)\n          .set({}); //会社情報の削除\n        firebase\n          .database()\n          .ref(\"comment/\" + key)\n          .set({}); //ある会社に対するコメントの削除\n        location.reload();\n      }\n    },\n    deleteSubCompany(key) {\n      var res = confirm(\"本当に削除しますか?\");\n      if (res == true) {\n        firebase\n          .database()\n          .ref(\"sub-company/\" + key)\n          .set({}); //会社情報の削除\n        firebase\n          .database()\n          .ref(\"comment/\" + key)\n          .set({}); //ある会社に対するコメントの削除\n        location.reload();\n      }\n    },\n    sendDetail() {\n      document.location.href = \"./detail\";\n    },\n    companySend(str) {\n      this.COMPANY_UPDATE(str); //会社情報を詳細画面に送る\n      this.sendDetail();\n    }\n  }\n};\n</script>\n"]}]}