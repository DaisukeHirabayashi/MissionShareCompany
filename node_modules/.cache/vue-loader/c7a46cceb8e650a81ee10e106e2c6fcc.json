{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue","mtime":1572589821447},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGZpcmViYXNlIOODouOCuOODpeODvOODqwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwTXV0YXRpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCB7IENPTVBBTllfVVBEQVRFIH0gZnJvbSAiLi4vc3RvcmUvbXV0YXRpb24tdHlwZXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImhvbWUiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiB7fSwgLy8g44Om44O844K244O85oOF5aCxCiAgICAgIGNoYXQ6IFtdLCAvLyDlj5blvpfjgZfjgZ/jg6Hjg4Pjgrvjg7zjgrjjgpLlhaXjgozjgovphY3liJcKICAgICAgaW5wdXQ6ICIiIC8vIOWFpeWKm+OBl+OBn+ODoeODg+OCu+ODvOOCuAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICBmaXJlYmFzZS5hdXRoKCkub25BdXRoU3RhdGVDaGFuZ2VkKHVzZXIgPT4gewogICAgICB0aGlzLnVzZXIgPSB1c2VyID8gdXNlciA6IHt9OwogICAgICBjb25zdCBjb21wYW55RGF0YSA9IGZpcmViYXNlLmRhdGFiYXNlKCkucmVmKCJjb21wYW55Iik7CiAgICAgIGlmICh1c2VyKSB7CiAgICAgICAgdGhpcy5jaGF0ID0gW107CiAgICAgICAgLy8gY29tcGFueSDjgavlpInmm7TjgYzjgYLjgaPjgZ/jgajjgY3jga7jg4/jg7Pjg4njg6njgpLnmbvpjLIKICAgICAgICBjb21wYW55RGF0YS5saW1pdFRvTGFzdCgxMCkub24oImNoaWxkX2FkZGVkIiwgdGhpcy5jaGlsZEFkZGVkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBjb21wYW55IOOBq+WkieabtOOBjOOBguOBo+OBn+OBqOOBjeOBruODj+ODs+ODieODqeOCkuino+mZpAogICAgICAgIGNvbXBhbnlEYXRhLmxpbWl0VG9MYXN0KDEwKS5vZmYoImNoaWxkX2FkZGVkIiwgdGhpcy5jaGlsZEFkZGVkKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDjgrnjgq/jg63jg7zjg6vkvY3nva7jgpLkuIDnlarkuIvjgavnp7vli5UKICAgIC8vIOODreOCsOOCpOODs+WHpueQhgogICAgZG9Mb2dpbigpIHsKICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZmlyZWJhc2UuYXV0aC5Hb29nbGVBdXRoUHJvdmlkZXIoKTsKICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25JbldpdGhQb3B1cChwcm92aWRlcik7CiAgICB9LAogICAgLi4ubWFwTXV0YXRpb25zKHsKICAgICAgQ09NUEFOWV9VUERBVEUKICAgIH0pLAogICAgLy8g44Ot44Kw44Ki44Km44OI5Yem55CGCiAgICBkb0xvZ291dCgpIHsKICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKTsKICAgICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICB9LAogICAgc2Nyb2xsQm90dG9tKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+X44GR5Y+W44Gj44Gf44Oh44OD44K744O844K444KSY2hhdOOBq+i/veWKoAogICAgLy8g44OH44O844K/44OZ44O844K544Gr5paw44GX44GE6KaB57Sg44GM6L+95Yqg44GV44KM44KL44Go6ZqP5pmC5ZG844Gz5Ye644GV44KM44KLCiAgICBjaGlsZEFkZGVkKHNuYXApIHsKICAgICAgY29uc3QgY29tcGFueSA9IHNuYXAudmFsKCk7CiAgICAgIHRoaXMuY2hhdC5wdXNoKHsKICAgICAgICBrZXk6IHNuYXAua2V5LAogICAgICAgIG5hbWU6IGNvbXBhbnkubmFtZSwKICAgICAgICBkZXRhaWw6IGNvbXBhbnkuZGV0YWlsLAogICAgICAgIHBsYWNlOiBjb21wYW55LnBsYWNlLAogICAgICAgIG1lbWJlcjogY29tcGFueS5tZW1iZXIsCiAgICAgICAgbW9uZXk6IGNvbXBhbnkubW9uZXksCiAgICAgICAgeWVhcjogY29tcGFueS55ZWFyCiAgICAgIH0pOwogICAgICB0aGlzLnNjcm9sbEJvdHRvbSgpOwogICAgfSwKICAgIGRvU2VuZCgpIHsKICAgICAgLy8gZmlyZWJhc2Ug44Gr44Oh44OD44K744O844K444KS6L+95YqgCiAgICAgIGlmICh0aGlzLnVzZXIudWlkICYmIHRoaXMuaW5wdXQubGVuZ3RoKSB7CiAgICAgICAgZmlyZWJhc2UKICAgICAgICAgIC5kYXRhYmFzZSgpCiAgICAgICAgICAucmVmKCJjb21wYW55IikKICAgICAgICAgIC5wdXNoKAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogdGhpcy5pbnB1dAogICAgICAgICAgICB9LAogICAgICAgICAgICAoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5pbnB1dCA9ICIiOyAvLyDjg5Xjgqnjg7zjg6DjgpLnqbrjgavjgZnjgosKICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgICAgfQogICAgfSwKICAgIGNvbXBhbnlTZW5kKHN0cikgewogICAgICB0aGlzLkNPTVBBTllfVVBEQVRFKHN0cik7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"app\">\n      <header class=\"header\">\n        <h1>Company</h1>\n        <!-- ログイン時にはフォームとログアウトボタンを表示 -->\n        <div v-if=\"user.uid\" key=\"login\">\n          [{{ user.displayName }}]\n          <button type=\"button\" @click=\"doLogout\">ログアウト</button>\n        </div>\n        <!-- 未ログイン時にはログインボタンを表示 -->\n        <div v-else key=\"logout\">\n          <button type=\"button\" @click=\"doLogin\">ログイン</button>\n        </div>\n      </header>\n\n      <!--Firebase から取得したリストを描画（トランジション付き）-->\n      <transition-group name=\"company\" tag=\"div\" class=\"list content\">\n        <section\n          v-for=\"{ key, name, detail, place, member, money, year } in chat\"\n          :key=\"key\"\n          class=\"item\"\n        >\n          <router-link\n            to=\"./detail\"\n            @click.native=\"\n              companySend({ key, name, detail, place, member, money, year })\n            \"\n            >{{ name }}</router-link\n          >\n        </section>\n      </transition-group>\n    </div>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\nimport { mapState, mapMutations } from \"vuex\";\nimport { COMPANY_UPDATE } from \"../store/mutation-types\";\nexport default {\n  name: \"home\",\n  data() {\n    return {\n      user: {}, // ユーザー情報\n      chat: [], // 取得したメッセージを入れる配列\n      input: \"\" // 入力したメッセージ\n    };\n  },\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.user = user ? user : {};\n      const companyData = firebase.database().ref(\"company\");\n      if (user) {\n        this.chat = [];\n        // company に変更があったときのハンドラを登録\n        companyData.limitToLast(10).on(\"child_added\", this.childAdded);\n      } else {\n        // company に変更があったときのハンドラを解除\n        companyData.limitToLast(10).off(\"child_added\", this.childAdded);\n      }\n    });\n  },\n  methods: {\n    // スクロール位置を一番下に移動\n    // ログイン処理\n    doLogin() {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider);\n    },\n    ...mapMutations({\n      COMPANY_UPDATE\n    }),\n    // ログアウト処理\n    doLogout() {\n      firebase.auth().signOut();\n      location.reload();\n    },\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをchatに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const company = snap.val();\n      this.chat.push({\n        key: snap.key,\n        name: company.name,\n        detail: company.detail,\n        place: company.place,\n        member: company.member,\n        money: company.money,\n        year: company.year\n      });\n      this.scrollBottom();\n    },\n    doSend() {\n      // firebase にメッセージを追加\n      if (this.user.uid && this.input.length) {\n        firebase\n          .database()\n          .ref(\"company\")\n          .push(\n            {\n              name: this.input\n            },\n            () => {\n              this.input = \"\"; // フォームを空にする\n            }\n          );\n      }\n    },\n    companySend(str) {\n      this.COMPANY_UPDATE(str);\n    }\n  }\n};\n</script>\n"]}]}