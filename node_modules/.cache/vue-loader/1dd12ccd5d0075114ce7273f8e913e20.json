{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vuetify-loader/lib/loader.js!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue","mtime":1573888397981},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaG9tZSIgfSwgWwogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IGF0dHJzOiB7IGlkOiAiYXBwIiB9IH0sCiAgICAgIFsKICAgICAgICBfdm0uX20oMCksCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5rZXl3b3JkLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJrZXl3b3JkIgogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiIH0sCiAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmtleXdvcmQgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfdm0ua2V5d29yZCA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pLAogICAgICAgIF9jKAogICAgICAgICAgInVsIiwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIFsKICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlbGVjdEFsbCwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzZWxlY3RBbGwiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogQXJyYXkuaXNBcnJheShfdm0uc2VsZWN0QWxsKQogICAgICAgICAgICAgICAgICAgICAgPyBfdm0uX2koX3ZtLnNlbGVjdEFsbCwgbnVsbCkgPiAtMQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uc2VsZWN0QWxsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciAkJGEgPSBfdm0uc2VsZWN0QWxsLAogICAgICAgICAgICAgICAgICAgICAgICAkJGVsID0gJGV2ZW50LnRhcmdldCwKICAgICAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSgkJGEpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkJHYgPSBudWxsLAogICAgICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCQkZWwuY2hlY2tlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICQkaSA8IDAgJiYgKF92bS5zZWxlY3RBbGwgPSAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgKF92bS5zZWxlY3RBbGwgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKDAsICQkaSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdCgkJGEuc2xpY2UoJCRpICsgMSkpKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2VsZWN0QWxsID0gJCRjCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigi5YWo6YG45oqeIikKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX3ZtLl9sKF92bS5wcmVmZWN0dXJlcywgZnVuY3Rpb24ocHJlZmVjdHVyZSkgewogICAgICAgICAgICAgIHJldHVybiBfYygiYSIsIFsKICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIFsKICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmNoZWNrTmFtZXMsCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJjaGVja05hbWVzIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiB9LAogICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogcHJlZmVjdHVyZSwKICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkoX3ZtLmNoZWNrTmFtZXMpCiAgICAgICAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5jaGVja05hbWVzLCBwcmVmZWN0dXJlKSA+IC0xCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLmNoZWNrTmFtZXMKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCRhID0gX3ZtLmNoZWNrTmFtZXMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgJCRlbCA9ICRldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KCQkYSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCR2ID0gcHJlZmVjdHVyZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCRlbC5jaGVja2VkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmIChfdm0uY2hlY2tOYW1lcyA9ICQkYS5jb25jYXQoWyQkdl0pKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLmNoZWNrTmFtZXMgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmNoZWNrTmFtZXMgPSAkJGMKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MocHJlZmVjdHVyZSkpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIH0pCiAgICAgICAgICBdLAogICAgICAgICAgMgogICAgICAgICksCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5waWNrZWQsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBpY2tlZCIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJyYWRpbyIsIGlkOiAibWFpbiIsIHZhbHVlOiAibWFpbiIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IGNoZWNrZWQ6IF92bS5fcShfdm0ucGlja2VkLCAibWFpbiIpIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5waWNrZWQgPSAibWFpbiIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pLAogICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAibWFpbiIgfSB9LCBbX3ZtLl92KCLmnKznpL4iKV0pLAogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGlja2VkLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJwaWNrZWQiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAicmFkaW8iLCBpZDogInN1YiIsIHZhbHVlOiAic3ViIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgY2hlY2tlZDogX3ZtLl9xKF92bS5waWNrZWQsICJzdWIiKSB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0ucGlja2VkID0gInN1YiIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pLAogICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAic3ViIiB9IH0sIFtfdm0uX3YoIuaUr+ekviIpXSksCiAgICAgICAgX3ZtLnBpY2tlZCA9PSAibWFpbiIKICAgICAgICAgID8gWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInRyYW5zaXRpb24tZ3JvdXAiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImxpc3QgY29udGVudCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG5hbWU6ICJjb21wYW55IiwgdGFnOiAiZGl2IiB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5maWx0ZXJlZENvbXBhbnlzLCBmdW5jdGlvbihyZWYpIHsKICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IHJlZi5rZXkKICAgICAgICAgICAgICAgICAgdmFyIG5hbWUgPSByZWYubmFtZQogICAgICAgICAgICAgICAgICB2YXIgcHJlZmVjdHVyZSA9IHJlZi5wcmVmZWN0dXJlCiAgICAgICAgICAgICAgICAgIHZhciBhZGRyZXNzID0gcmVmLmFkZHJlc3MKICAgICAgICAgICAgICAgICAgdmFyIHVybCA9IHJlZi51cmwKICAgICAgICAgICAgICAgICAgdmFyIHBob25lbnVtYmVyID0gcmVmLnBob25lbnVtYmVyCiAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAic2VjdGlvbiIsCiAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGtleSwgc3RhdGljQ2xhc3M6ICJpdGVtIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uY2hlY2tOYW1lcywgZnVuY3Rpb24oc2VsZWN0UHJlZmVjdHVyZSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdFByZWZlY3R1cmUgPT0gcHJlZmVjdHVyZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY29tcGFueVNlbmQoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGtleSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJlZmVjdHVyZTogcHJlZmVjdHVyZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBob25lbnVtYmVyOiBwaG9uZW51bWJlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhuYW1lKSldCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidGQiLCBbX3ZtLl92KCLmnKznpL46IiArIF92bS5fcyhwcmVmZWN0dXJlKSldKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICkKICAgICAgICAgICAgXQogICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICBfdm0ucGlja2VkID09ICJzdWIiCiAgICAgICAgICA/IFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ0cmFuc2l0aW9uLWdyb3VwIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJsaXN0IGNvbnRlbnQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBuYW1lOiAic3ViQ29tcGFueSIsIHRhZzogImRpdiIgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIF92bS5fbChfdm0uZmlsdGVyZWRTdWJDb21wYW55cywgZnVuY3Rpb24ocmVmKSB7CiAgICAgICAgICAgICAgICAgIHZhciBrZXkgPSByZWYua2V5CiAgICAgICAgICAgICAgICAgIHZhciBuYW1lID0gcmVmLm5hbWUKICAgICAgICAgICAgICAgICAgdmFyIHByZWZlY3R1cmUgPSByZWYucHJlZmVjdHVyZQogICAgICAgICAgICAgICAgICB2YXIgYWRkcmVzcyA9IHJlZi5hZGRyZXNzCiAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSByZWYudXJsCiAgICAgICAgICAgICAgICAgIHZhciBwaG9uZW51bWJlciA9IHJlZi5waG9uZW51bWJlcgogICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgInNlY3Rpb24iLAogICAgICAgICAgICAgICAgICAgIHsga2V5OiBrZXksIHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmNoZWNrTmFtZXMsIGZ1bmN0aW9uKHNlbGVjdFByZWZlY3R1cmUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RQcmVmZWN0dXJlID09IHByZWZlY3R1cmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBocmVmOiAiIyIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNvbXBhbnlTZW5kKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBrZXksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZlY3R1cmU6IHByZWZlY3R1cmUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaG9uZW51bWJlcjogcGhvbmVudW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1haW5fY29tX2lkOiBfdm0ubWFpbl9jb21faWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MobmFtZSkpXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInRkIiwgW192bS5fdigi5pSv56S+OiIgKyBfdm0uX3MocHJlZmVjdHVyZSkpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMgogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgXSwKICAgICAgMgogICAgKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJoZWFkZXIiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyIiB9LCBbCiAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIuOCpOODs+OCv+ODvOODs+aDheWgseOCteOCpOODiCIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}