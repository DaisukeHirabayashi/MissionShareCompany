{"remainingRequest":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/k17111kk/TechTrain/techTrain_mission/src/views/Home.vue","mtime":1572313977110},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k17111kk/TechTrain/techTrain_mission/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGZpcmViYXNlIOODouOCuOODpeODvOODqwppbXBvcnQgZmlyZWJhc2UgZnJvbSAiZmlyZWJhc2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImhvbWUiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGF0OiBbXSwgLy8g5Y+W5b6X44GX44Gf44Oh44OD44K744O844K444KS5YWl44KM44KL6YWN5YiXCiAgICAgIGlucHV0OiAiIiAvLyDlhaXlipvjgZfjgZ/jg6Hjg4Pjgrvjg7zjgrgKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc3QgcmVmX21lc3NhZ2UgPSBmaXJlYmFzZS5kYXRhYmFzZSgpLnJlZigiY29tcGFueSIpOwogICAgdGhpcy5jaGF0ID0gW107CiAgICByZWZfbWVzc2FnZS5saW1pdFRvTGFzdCgxMCkub24oImNoaWxkX2FkZGVkIiwgdGhpcy5jaGlsZEFkZGVkKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOOCueOCr+ODreODvOODq+S9jee9ruOCkuS4gOeVquS4i+OBq+enu+WLlQogICAgc2Nyb2xsQm90dG9tKCkgewogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+X44GR5Y+W44Gj44Gf44Oh44OD44K744O844K444KSY2hhdOOBq+i/veWKoAogICAgLy8g44OH44O844K/44OZ44O844K544Gr5paw44GX44GE6KaB57Sg44GM6L+95Yqg44GV44KM44KL44Go6ZqP5pmC5ZG844Gz5Ye644GV44KM44KLCiAgICBjaGlsZEFkZGVkKHNuYXApIHsKICAgICAgY29uc3QgY29tcGFueSA9IHNuYXAudmFsKCk7CiAgICAgIHRoaXMuY2hhdC5wdXNoKHsKICAgICAgICBrZXk6IHNuYXAua2V5LAogICAgICAgIG5hbWU6IGNvbXBhbnkubmFtZSwKICAgICAgICBkZXRhaWw6IGNvbXBhbnkuZGV0YWlsCiAgICAgIH0pOwogICAgICB0aGlzLnNjcm9sbEJvdHRvbSgpOwogICAgfSwKICAgIGRvU2VuZCgpIHsKICAgICAgLy8gZmlyZWJhc2Ug44Gr44Oh44OD44K744O844K444KS6L+95YqgCiAgICAgIGZpcmViYXNlCiAgICAgICAgLmRhdGFiYXNlKCkKICAgICAgICAucmVmKCJjb21wYW55IikKICAgICAgICAucHVzaCgKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogdGhpcy5pbnB1dAogICAgICAgICAgfSwKICAgICAgICAgICgpID0+IHsKICAgICAgICAgICAgdGhpcy5pbnB1dCA9ICIiOyAvLyDjg5Xjgqnjg7zjg6DjgpLnqbrjgavjgZnjgosKICAgICAgICAgIH0KICAgICAgICApOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"app\">\n      <header class=\"header\">\n        <h1>Company</h1>\n        <a href=\"/company\">Comapany</a>\n      </header>\n\n      <!--Firebase から取得したリストを描画（トランジション付き）-->\n      <transition-group name=\"company\" tag=\"div\" class=\"list content\">\n        <section v-for=\"{ key, name, detail } in chat\" :key=\"key\" class=\"item\">\n          <div class=\"item-name\">{{ name }}</div>\n          <div class=\"item-detail\">{{ detail }}</div>\n        </section>\n      </transition-group>\n      <!-- 入力フォーム -->\n      <form action=\"\" @submit.prevent=\"doSend\" class=\"form\">\n        <textarea\n          v-model=\"input\"\n          @keydown.enter.exact.prevent=\"doSend\"\n        ></textarea>\n        <button type=\"submit\" class=\"send-button\">Send</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\n// firebase モジュール\nimport firebase from \"firebase\";\nexport default {\n  name: \"home\",\n  data() {\n    return {\n      chat: [], // 取得したメッセージを入れる配列\n      input: \"\" // 入力したメッセージ\n    };\n  },\n  created() {\n    const ref_message = firebase.database().ref(\"company\");\n    this.chat = [];\n    ref_message.limitToLast(10).on(\"child_added\", this.childAdded);\n  },\n  methods: {\n    // スクロール位置を一番下に移動\n    scrollBottom() {\n      this.$nextTick(() => {\n        window.scrollTo(0, document.body.clientHeight);\n      });\n    },\n    // 受け取ったメッセージをchatに追加\n    // データベースに新しい要素が追加されると随時呼び出される\n    childAdded(snap) {\n      const company = snap.val();\n      this.chat.push({\n        key: snap.key,\n        name: company.name,\n        detail: company.detail\n      });\n      this.scrollBottom();\n    },\n    doSend() {\n      // firebase にメッセージを追加\n      firebase\n        .database()\n        .ref(\"company\")\n        .push(\n          {\n            name: this.input\n          },\n          () => {\n            this.input = \"\"; // フォームを空にする\n          }\n        );\n    }\n  }\n};\n</script>\n"]}]}